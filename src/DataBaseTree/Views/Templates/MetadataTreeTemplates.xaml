<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:treeItems="clr-namespace:DBManager.Application.ViewModels.MetadataTree.TreeItems"
                    xmlns:convertors="clr-namespace:DBManager.Application.Convertors"
                    xmlns:templateSelectors="clr-namespace:DBManager.Application.TemplateSelectors"
                    xmlns:behaviors="clr-namespace:DBManager.Application.Behaviors"
                    xmlns:tree="clr-namespace:DBManager.Default.Tree;assembly=DBManager.Default"
                    xmlns:dbEntities="clr-namespace:DBManager.Default.Tree.DbEntities;assembly=DBManager.Default">

    <Style TargetType="Canvas"
           x:Key="MetadataIconCanvasStyle">
        <Setter Property="Height"
                Value="13" />
        <Setter Property="Width"
                Value="13" />
    </Style>

    <DataTemplate x:Key="ServerIconTemplate"
                  DataType="treeItems:ServerViewModel">
        <Canvas Style="{StaticResource MetadataIconCanvasStyle}"
                Background="{Binding Dialect,Converter={StaticResource DialectToIconConverter}}" />
    </DataTemplate>

    <DataTemplate x:Key="CategoryIconTemplate"
                  DataType="treeItems:CategoryViewModel">
        <Grid>
            <Canvas Style="{StaticResource MetadataIconCanvasStyle}"
                    Background="{StaticResource OpenedCategory}"
                    Visibility="{Binding IsExpanded,Converter={convertors:BooleanToVisibilityConverter}}" />

            <Canvas Style="{StaticResource MetadataIconCanvasStyle}"
                    Background="{StaticResource ClosedCategory}"
                    Visibility="{Binding IsExpanded,Converter={convertors:InvertedBooleanToVisibilityConverter}}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DbObjectDefaultIconTemplate"
                  DataType="{x:Type tree:DbObject}">
        <Canvas Style="{StaticResource MetadataIconCanvasStyle}"
                Background="{Binding Type,Converter={StaticResource MetadataTypeToIconConverter}}" />
    </DataTemplate>

    <DataTemplate x:Key="ConstraintIconTemplate"
                  DataType="{x:Type dbEntities:Constraint}">
        <Canvas Style="{StaticResource MetadataIconCanvasStyle}"
                Background="{Binding ConstraintType,Converter={StaticResource ConstraintTypeToIconConverter}}" />
    </DataTemplate>

    <DataTemplate x:Key="DbObjectIconTemplate"
                  DataType="treeItems:DbObjectViewModel">
        <ContentPresenter Content="{Binding Model}">
            <ContentPresenter.ContentTemplateSelector>
                <templateSelectors:MetadataObjectToIconTemplateSelector DbObjectIconTemplate="{StaticResource DbObjectDefaultIconTemplate}"
                                                                        ConstraintIconTemplate="{StaticResource ConstraintIconTemplate}"/>
                </ContentPresenter.ContentTemplateSelector>
        </ContentPresenter>
    </DataTemplate>

    <HierarchicalDataTemplate DataType="{x:Type treeItems:MetadataViewModelBase}"
                              ItemsSource="{Binding Children}">
        <StackPanel x:Name="Container"
                    Orientation="Horizontal">

            <StackPanel.Resources>
                <behaviors:BindingProxy x:Key="Proxy"
                                        Data="{Binding DataContext,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeView}}" />
            </StackPanel.Resources>

            <ContentPresenter Content="{Binding}">
                <ContentPresenter.ContentTemplateSelector>
                    <templateSelectors:MetadataIconTemplateSelector ServerIconTemplate="{StaticResource ServerIconTemplate}"
                                                                    CategoryIconTemplate="{StaticResource CategoryIconTemplate}"
                                                                    DbObjectIconTemplate="{StaticResource DbObjectIconTemplate}" />
                </ContentPresenter.ContentTemplateSelector>
            </ContentPresenter>

            <TextBlock x:Name="NameBlock"
                       Margin="3,0,0,0"
                       Text="{Binding Path=Name}" />
            <TextBlock x:Name="BusyLoaderIndicator" />

            <StackPanel.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="{Binding Data.ConnectionManager.DisconnectCommand,Source={StaticResource Proxy}}"
                              CommandParameter="{Binding}"
                              Header="Disconnect" />
                </ContextMenu>
            </StackPanel.ContextMenu>

        </StackPanel>
        <HierarchicalDataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsBusy}"
                         Value="true">

                <Setter TargetName="BusyLoaderIndicator"
                        Property="Text"
                        Value="(loading...)" />
            </DataTrigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <Style x:Key="MetadataTreeStyle"
           TargetType="{x:Type TreeView}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                             Color="{StaticResource SemiAccentLowСolor}" />

            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                             Color="{StaticResource SemiAccentLowСolor}" />
        </Style.Resources>

        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="IsExpanded"
                            Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="FontWeight"
                            Value="Normal" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>